---
import CTA from "./CTA.astro";

const {
  eyebrow,
  headline,
  subheading,
  cta,
  tabs,
  entryID
} = Astro.props;
---
    <div class="md:mx-32 mx-6">
      {eyebrow && (
        <p class="font-inter font-semibold text-[12px] text-am1-main mb-4 text-center" data-contentful-field-id="eyebrow" data-contentful-entry-id={entryID}>
          {eyebrow}
        </p>
      )}
      {headline && (
        <h2 class="font-montserrat text-center text-off-black text-2xl md:text-3xl mb-4 font-semibold mx-auto lg:max-w-[800px]" data-contentful-field-id="headline" data-contentful-entry-id={entryID}>
          {headline}
        </h2>
      )}
      {subheading && (
        <p class="font-inter text-center text-off-black text-md font-normal mt-2 mx-auto max-w-[800px]" data-contentful-field-id="subheading" data-contentful-entry-id={entryID}>
          {subheading}
        </p>
      )}
      {cta && (
        <div class="mt-4 block text-center">
          <CTA
            link={cta.link}
            openInANewTab={cta.openInANewTab}
            label={cta.label}
            backgroundColor={true}
            isSmall={true}
            data-contentful-field-id="cta"
            data-contentful-entry-id={cta?.sys?.id}
          />
        </div>
      )}
    </div>
    <div class="bg-white mt-12 rounded-2xl md:mx-32 mx-6">
      <div class="flex flex-row flex-wrap px-16 py-8 md:gap-x-20 gap-x-8 gap-y-6 border-b-2 border-b-interface-input">
        {
          tabs?.items?.map((tab: { tabName: unknown; sys: any; }, idx: any) => {
            return (
              <div class="flex flex-row gap-2 items-center cursor-pointer">
                <div class={`flex w-4 h-4 justify-center items-center bg-bluefade rounded-full`}><div class={`w-1 h-1 bg-off-gray rounded-full`} /></div>
                <p class={`font-montserrat font-bold text-md text-off-gray`} data-contentful-field-id="tabName" data-contentful-entry-id={tab?.sys?.id}>{tab.tabName}</p>
              </div>
            );
          })
        }
      </div>
      <div>
        <div class="md:p-16 p-6">
          {/* TODO: Add Swiper */}
          {/* <Swiper
            ref={swiperRef}
            direction="horizontal"
            centeredSlides={true}
            modules={[Navigation]}
            navigation={{
              nextEl: ".swiper-button-next-no-style",
              prevEl: ".swiper-button-prev-no-style",
            }}
            loop={false}
            initialSlide={currentTabIndex}
            onSwiper={(swiper) => (swiperRef.current = swiper)}
            onSlideChangeTransitionEnd={c => {
              setCurrentTabIndex(c?.realIndex);
            }}
            class="mySwiper"
          >
            {tabs?.map((tab: ServiceTab, i: any) => {
              return (
                <SwiperSlide
                  class="swiper-slide justify-center pb-4"
                  key={i}
                >
                  <div class="grid lg:grid-cols-5 grid-cols-1 lg:gap-16 gap-8">
                    <div class="col-span-2 flex flex-col justify-start">
                      <h3 class=" font-montserrat font-bold text-off-black text-[24px] mb-6">{tab.headline}</h3>
                      <p class=" font-inter font-normal text-off-black text-[16px] mb-6">{tab.cardSubheading}</p>
                      {
                        tab?.ctAsCollection?.items?.map(_cta => {
                          return (
                            <div class="flex gap-1 items-center flex-row mt-2" key={_cta.label}>
                              <a href={_cta?.link} class="font-meduim font-inter text-[16px]">{_cta?.label}</a>
                              <img class="w-4 h-4" src={greenArrow} />
                            </div>
                          );
                        })
                      }
                    </div>
                    <div class="col-span-3 flex flex-col justify-start">
                      <img
                        loading="lazy"
                        class="w-full object-cover rounded-2xl"
                        src={`${tab?.image?.url}?fm=webp`}
                        alt={tab?.imageAlt ? `${tab?.imageAlt}` : tab?.image?.description}
                      />
                    </div>
                  </div>
                </SwiperSlide>
              );
            })}
          </Swiper> 
          <div class="flex flex-row justify-start gap-4 mt-4">
            <div class={`swiper-button-prev-no-style bg-amethyst cursor-pointer  flex h-10 w-10 rounded-full  justify-center items-center`} >
              <img src={backArrow} class="w-6 h-6" />
            </div>
            <div class={`swiper-button-next-no-style ${currentTabIndex == tabs.length - 1? "bg-off-gray" : "bg-amethyst cursor-pointer"} flex h-10 w-10 rounded-full justify-center items-center`} >
              <img src={forwardArrow} class="w-6 h-6" />
            </div>
          </div>*/}
        </div>
      </div>
    </div>